{"version":3,"file":"ng-qrcode.js","sources":["../../../projects/ng-qrcode/src/lib/qr-code.directive.ts","../../../projects/ng-qrcode/src/lib/qr-code.component.ts","../../../projects/ng-qrcode/src/lib/qr-code.module.ts","../../../projects/ng-qrcode/src/public-api.ts","../../../projects/ng-qrcode/src/ng-qrcode.ts"],"sourcesContent":["import { Directive, Input, isDevMode, OnChanges, ViewContainerRef } from \"@angular/core\"\nimport qrcode from \"qrcode\"\nimport { QrCodeErrorCorrectionLevel, RGBAColor } from \"./types\"\n\nconst validColorRegex = /^#(?:[0-9a-fA-F]{3,4}){1,2}$/\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: `canvas[qrCode]`,\n})\nexport class QrCodeDirective implements OnChanges {\n\n  static readonly DEFAULT_ERROR_CORRECTION_LEVEL: QrCodeErrorCorrectionLevel = \"M\"\n  static readonly DEFAULT_CENTER_IMAGE_SIZE = 40\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCode\") value!: string\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeVersion\") version?: number\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeErrorCorrectionLevel\") errorCorrectionLevel: QrCodeErrorCorrectionLevel = QrCodeDirective.DEFAULT_ERROR_CORRECTION_LEVEL\n\n  @Input() width?: number\n  @Input() height?: number\n  @Input() darkColor: RGBAColor = \"#000000FF\"\n  @Input() lightColor: RGBAColor = \"#FFFFFFFF\"\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeCenterImageSrc\") centerImageSrc?: string\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeCenterImageWidth\") centerImageWidth?: number | string\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeCenterImageHeight\") centerImageHeight?: number | string\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeMargin\") margin = 16\n\n  private centerImage?: HTMLImageElement\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n  ) {\n  }\n\n  async ngOnChanges() {\n    if (!this.value) {\n      return\n    }\n\n    if (this.version && this.version > 40) {\n      console.warn(\"[qrCode] max version is 40, clamping\")\n      this.version = 40\n    } else if (this.version && this.version < 1) {\n      console.warn(\"[qrCode] min version is 1, clamping\")\n      this.version = 1\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn(\"[qrCode] version should be set to a number, defaulting to auto\")\n      this.version = undefined\n    }\n\n    const canvas = this.viewContainerRef.element.nativeElement as HTMLCanvasElement | null\n\n    if (!canvas) {\n      // native element not available on server side rendering\n      return\n    }\n\n    const context = canvas.getContext(\"2d\")\n\n    if (context) {\n      context.clearRect(0, 0, context.canvas.width, context.canvas.height)\n    }\n\n    const errorCorrectionLevel = this.errorCorrectionLevel ?? QrCodeDirective.DEFAULT_ERROR_CORRECTION_LEVEL\n\n    const dark = validColorRegex.test(this.darkColor) ? this.darkColor : undefined\n    const light = validColorRegex.test(this.lightColor) ? this.lightColor : undefined\n\n    if (isDevMode()) {\n      if (!dark && this.darkColor) {\n        console.error(\"[ng-qrcode] darkColor set to invalid value, must be RGBA hex color string, eg: #3050A1FF\")\n      }\n\n      if (!light && this.lightColor) {\n        console.error(\"[ng-qrcode] lightColor set to invalid value, must be RGBA hex color string, eg: #3050A130\")\n      }\n    }\n    await qrcode\n      .toCanvas(canvas, this.value, {\n        version: this.version,\n        errorCorrectionLevel,\n        width: this.width,\n        margin: this.margin,\n        color: {\n          dark,\n          light,\n        },\n      })\n\n    const centerImageSrc = this.centerImageSrc\n    const centerImageWidth = getIntOrDefault(this.centerImageWidth, QrCodeDirective.DEFAULT_CENTER_IMAGE_SIZE)\n    const centerImageHeight = getIntOrDefault(this.centerImageHeight, QrCodeDirective.DEFAULT_CENTER_IMAGE_SIZE)\n\n    if (centerImageSrc && context) {\n\n      if (!this.centerImage) {\n        this.centerImage = new Image(centerImageWidth, centerImageHeight)\n      }\n\n      if (centerImageSrc !== this.centerImage?.src) {\n        this.centerImage.src = centerImageSrc\n      }\n\n      if (centerImageWidth !== this.centerImage.width) {\n        this.centerImage.width = centerImageWidth\n      }\n\n      if (centerImageHeight !== this.centerImage.height) {\n        this.centerImage.height = centerImageHeight\n      }\n\n      const centerImage = this.centerImage\n\n      centerImage.onload = () => {\n        context.drawImage(\n          centerImage,\n          canvas.width / 2 - centerImageWidth / 2,\n          canvas.height / 2 - centerImageHeight / 2, centerImageWidth, centerImageHeight,\n        )\n      }\n    }\n\n  }\n\n}\n\nfunction getIntOrDefault(value: string | number | undefined, defaultValue: number): number {\n  if (value === undefined || value === \"\") {\n    return defaultValue\n  }\n\n  if (typeof value === \"string\") {\n    return parseInt(value, 10)\n  }\n\n  return value\n}\n","import { Component, Input } from \"@angular/core\"\nimport { QrCodeErrorCorrectionLevel, RGBAColor } from \"./types\"\n\n@Component({\n  selector: \"qr-code\",\n  template: `\n    <canvas *ngIf=\"value\"\n            [qrCode]=\"value\"\n            [qrCodeErrorCorrectionLevel]=\"errorCorrectionLevel\"\n            [qrCodeCenterImageSrc]=\"centerImageSrc\"\n            [qrCodeCenterImageWidth]=\"centerImageSize\"\n            [qrCodeCenterImageHeight]=\"centerImageSize\"\n            [qrCodeMargin]=\"margin\"\n            [width]=\"size\"\n            [height]=\"size\"\n            [darkColor]=\"darkColor\"\n            [lightColor]=\"lightColor\"\n    >\n    </canvas>\n  `,\n  styles: [],\n})\nexport class QrCodeComponent {\n\n  @Input()\n  value?: string\n\n  @Input()\n  size?: string | number\n\n  @Input()\n  darkColor?: RGBAColor\n\n  @Input()\n  lightColor?: RGBAColor\n\n  @Input()\n  errorCorrectionLevel?: QrCodeErrorCorrectionLevel\n\n  @Input()\n  centerImageSrc?: string\n\n  @Input()\n  centerImageSize?: string | number\n\n  @Input()\n  margin?: number\n\n}\n","import { CommonModule } from \"@angular/common\"\nimport { NgModule } from \"@angular/core\"\nimport { QrCodeComponent } from \"./qr-code.component\"\nimport { QrCodeDirective } from \"./qr-code.directive\"\n\n@NgModule({\n  declarations: [\n    QrCodeComponent,\n    QrCodeDirective,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    QrCodeComponent,\n    QrCodeDirective,\n  ],\n})\nexport class QrCodeModule {\n}\n","/*\n * Public API Surface of ng-qrcode\n */\n\nexport * from \"./lib/qr-code.component\"\nexport * from \"./lib/qr-code.directive\"\nexport * from \"./lib/qr-code.module\"\nexport * from \"./lib/types\"\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}